static bool comparator(pair<string,int> a,pair<string,int> b){
        if(a.second==b.second){
            return a.first<b.first; // lexicographic
        }
        return a.second>b.second; // frequency
    }

class Solution {
public:
    
    vector<string> topKFrequent(vector<string>& words, int k) {
        map<string,int> mp;
        // priority_queue<pair<string,int>> pq;
        for(auto it : words) mp[it]++;
       
        vector<pair<string,int>> freq;
        for(auto it : mp){  
            freq.push_back(make_pair(it.first,it.second));
        }
        sort(freq.begin(),freq.end(),comparator);  
        
        vector<string> ans;
      
        for(int i=0 ; i<k ; i++) ans.push_back(freq[i].first);
        
        return ans;
    }
};
