class Solution {
public:
    
  unordered_map<TreeNode*, vector<int>> dp;
    
    int fx(TreeNode* root , int k ){
        
        if(root==NULL) return 0;
       
         if(dp.count(root) && dp[root][k] != -1) return dp[root][k];
        dp[root] = {-1,-1};
        
        int take=-1;
        if(k==1){
            take=root->val+fx(root->left , 0 )+fx(root->right,0);
        }
        
        int nt=fx(root->left,1)+fx(root->right,1 );
        
        return dp[root][k]=max(take , nt);
    }
    
    int rob(TreeNode* root) {
       
        return fx(root , 1);
    }
};
