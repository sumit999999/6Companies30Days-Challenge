class Solution {
public:
    
    int minMutation(string startGene, string endGene, vector<string>& bank) {
        queue<pair<string,int>> q;
        int count=0 , ans=-1;
        q.push({startGene,0});
        unordered_map<string,int> mp , vis;
        vector<char> choices = {'A' , 'C' , 'G' , 'T'};
        for(auto it : bank) mp[it]++;

        while(!q.empty()){
            int cnt=q.front().second;
            string s=q.front().first;
            q.pop();
            if(s==endGene){
                ans=max(ans,cnt);
                continue;
            }

            for(int i=0 ; i<8 ; i++){
               string temp=s;
               for(int j=0 ; j<4 ; j++){
                   temp[i]=choices[j];
                   if(mp.find(temp)!=mp.end()){
                       if(vis.find(temp)==vis.end()){
                           vis[temp]++;
                           q.push({temp,cnt+1});
                       }
                   }  
               }
            }
        }

        return ans;
    }
};
