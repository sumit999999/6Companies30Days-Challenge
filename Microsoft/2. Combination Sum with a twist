vector<vector<int>> res;

    void fx(int idx , vector<int> &ans , int target , int n , vector<int>& candidates , int k){
        if(k==0){
            if(target==0){
                res.push_back(ans);
                return ;
            }

            return ;
        }

        for(int i=idx ; i<n ; i++){
           
           if (i > idx && candidates[i] == candidates[i - 1])
            continue;

            ans.push_back(candidates[i]);
            fx(i+1 , ans, target-candidates[i] , n , candidates , k-1);
            ans.pop_back();
        }
    }
    
    void combinationSum2(vector<int>& candidates, int target,int k) {
        vector<int> ans;
        fx(0,ans,target,candidates.size() ,candidates,k);
    }

    vector<vector<int>> combinationSum3(int k, int n) {
        vector<int> c={1,2,3,4,5,6,7,8,9};
        combinationSum2(c,n,k);
        return res;
    }
